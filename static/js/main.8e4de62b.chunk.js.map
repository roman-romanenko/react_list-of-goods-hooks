{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isStarted","setStart","isReversed","setReverse","NONE","sortType","setSortType","goods","visibleGoods","ALPHABET","sort","a","b","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","onClick","current","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,oDAbCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAgCE,IAAME,EAAU,WACrB,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAiCF,oBAAS,GAA1C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAgCJ,mBAASH,EAASQ,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAeMC,EA5CR,SACEA,EACAF,EACAH,GAEA,IAAMM,EAAY,YAAOD,GAEzB,OAAQF,GACN,KAAKT,EAASa,SACZD,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC5C,MACF,KAAKhB,EAASkB,OACZN,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,UAE3C,KAAKnB,EAASQ,MAShB,OAJIF,GACFM,EAAaQ,UAGRR,EAqBOS,CAAkBpB,EAAiBQ,EAAUH,GAE3D,OACE,qBAAKgB,UAAU,MAAf,SACIlB,EAOE,sBAAKkB,UAAU,YAAf,UACE,wBAAQA,UAAU,SAASC,KAAK,SAASC,QAvBhC,kBAAMd,EAAYV,EAASa,WAuBpC,iCAIA,wBAAQS,UAAU,SAASC,KAAK,SAASC,QAzB9B,kBAAMd,EAAYV,EAASkB,SAyBtC,4BAIA,wBAAQI,UAAU,SAASC,KAAK,SAASC,QA3BlC,kBAAMjB,GAAW,SAAAkB,GAAO,OAAKA,MA2BpC,qBAIA,wBAAQH,UAAU,QAAQC,KAAK,SAASC,QA7BpC,WACZjB,GAAW,GACXG,EAAYV,EAASQ,OA2Bb,mBAIA,oBAAIc,UAAU,QAAd,SACGX,EAAMe,KAAI,SAAAC,GAAI,OACb,oBAAIL,UAAU,cAAd,SAAwCK,GAAPA,WAxBvC,wBAAQL,UAAU,QAAQC,KAAK,SAASC,QAnBhC,kBAAMnB,GAAS,IAmBvB,sBCtEVuB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8e4de62b.chunk.js","sourcesContent":["import { FC, useState } from 'react';\nimport './App.css';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((a, b) => a.localeCompare(b));\n      break;\n    case SortType.LENGTH:\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n    case SortType.NONE:\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: FC = () => {\n  const [isStarted, setStart] = useState(false);\n  const [isReversed, setReverse] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const isStart = () => setStart(true);\n\n  const sortByName = () => setSortType(SortType.ALPHABET);\n\n  const sortByLength = () => setSortType(SortType.LENGTH);\n\n  const reversed = () => setReverse(current => !current);\n\n  const reset = () => {\n    setReverse(false);\n    setSortType(SortType.NONE);\n  };\n\n  const goods = getReorderedGoods(goodsFromServer, sortType, isReversed);\n\n  return (\n    <div className=\"App\">\n      {!isStarted\n        ? (\n          <button className=\"start\" type=\"button\" onClick={isStart}>\n            Start\n          </button>\n        )\n        : (\n          <div className=\"App__list\">\n            <button className=\"button\" type=\"button\" onClick={sortByName}>\n              Sort alphabetically\n            </button>\n\n            <button className=\"button\" type=\"button\" onClick={sortByLength}>\n              Sort by length\n            </button>\n\n            <button className=\"button\" type=\"button\" onClick={reversed}>\n              Reverse\n            </button>\n\n            <button className=\"reset\" type=\"button\" onClick={reset}>\n              Reset\n            </button>\n\n            <ul className=\"Goods\">\n              {goods.map(good => (\n                <li className=\"Goods__item\" key={good}>{good}</li>\n              ))}\n            </ul>\n          </div>\n        )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}